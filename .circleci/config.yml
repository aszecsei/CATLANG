version: 2
jobs:
  build:
    docker:
      # specify the version
      - image: circleci/rust:latest
    working_directory: ~/catlang
    steps:
      - checkout
      - run:
          name: Install rustfmt
          command: rustup component add rustfmt-preview
      - run:
          name: Install nightly & stable
          command: |
            rustup install nightly
            rustup install stable
            rustup update
      - restore_cache:
          keys:
            - rust-mod-v1-{{ checksum "Cargo.lock" }}
      - run:
          name: Check formatting
          command: |
            rustfmt --version
            cargo fmt --all -- --check
      - run:
          name: Nightly Build
          command: |
            rustup run nightly rustc --version --verbose
            rustup run nightly cargo --version --verbose
            rustup run nightly cargo build
      - run:
          name: Stable Build
          command: |
            rustup run stable rustc --version --verbose
            rustup run stable cargo --version --verbose
            rustup run stable cargo build
      - run:
          name: Test
          command: rustup run stable cargo test
      - run:
          name: Upload Coverage
          command: |
            sudo apt-get update
            sudo apt-get install -y libcurl4-openssl-dev libelf-dev libdw-dev cmake gcc binutils-dev libiberty-dev
            wget https://github.com/SimonKagstrom/kcov/archive/master.tar.gz &&
            tar xzf master.tar.gz &&
            cd kcov-master &&
            mkdir build &&
            cd build &&
            cmake .. &&
            make &&
            make install DESTDIR=../../kcov-build &&
            cd ../.. &&
            rm -rf kcov-master &&
            for file in target/debug/examplerust-*[^\.d]; do mkdir -p "target/cov/$(basename $file)"; ./kcov-build/usr/local/bin/kcov --exclude-pattern=/.cargo,/usr/lib --verify "target/cov/$(basename $file)" "$file"; done &&
            bash <(curl -s https://codecov.io/bash) &&
            echo "Uploaded code coverage"
      - save_cache:
          key: rust-mod-v1-{{ checksum "Cargo.lock" }}
          paths:
            - "~/.cargo"
            - "./target"
workflows:
  version: 2
  build_and_test:
    jobs:
      - build
