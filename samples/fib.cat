// The iterative version
export const fibIter = (n: int) -> {
  let a = 0;
  let b = 1;
  for (let x = 0; x < n; x++) {
    const temp = a + b;
    a = b;
    b = temp;
  }
  return a;
}

struct SOA Vector3 {
  x: float = 1;
  y: float = 2;
  z: float = 3;
}

enum Alignment: U32 {
  Left,
  Right,
  Center,
}

/*
  The recursive version
*/
export const fibRecur = (n: int) -> {
  if (n == 0) {
    return 0;
  }
  if (n == 1) {
    return 1;
  }
  return fibRecur(n-1) + fibRecur(n-2);
}

print("Hello, world!\n")